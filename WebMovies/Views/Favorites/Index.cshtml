@model IEnumerable<WebMovies.Models.Favorite>
@*@model PagedList.IPagedList<WebMovies.Models.Favorite>*@
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    ViewBag.Tittle = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#searchData").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: @Url.Action("Autocomplete","Favorites"),
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>
<script type="text/javascript">
    $(document).ready(function () {

        var url = "@Url.Action("GetImageList", "Favorites")";
        $.getJSON(url, function (data) {
            var jsd = JSON.stringify(data);
            var data1 = '{"Items":' + jsd + '}';
            var k = jQuery.parseJSON(data1);
            alert(data);
            $.each(k.Items, function (i, item) {
                var stringbuilder = [];
                stringbuilder.push(' <div ><span class="span1"><img src="' + item.ImageURL + '" name="productimage"></span><span class="span2">' + item.FavoriteName + '</span><p></p></div>');
                $('#BundleDetails').append(stringbuilder.join(''));
            });

        }); // End getJSON

    }); // End document.ready
</script>
<script>
    /*Menu-toggle*/
    $("#menu-toggle").click(function(e) {
        e.preventDefault();
        $("#wrapper").toggleClass("active");
    });

    /*Scroll Spy*/
    $('body').scrollspy({ target: '#spy', offset:80});

    /*Smooth link animation*/
    $('a[href*=#]:not([href=#])').click(function() {
        if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') || location.hostname == this.hostname) {

            var target = $(this.hash);
            target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
            if (target.length) {
                $('html,body').animate({
                    scrollTop: target.offset().top
                }, 1000);
                return false;
            }
        }
    });
</script>

<h2>Favorites</h2>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>    
    @*@section SideBar
    {
        <p> This is a new section</p>
        <ul>
       
        </ul>
        <p> Today is: @DateTime.Now.ToShortDateString()</p>
    }*@
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <p>
        @*@using (Html.BeginForm("Index", "Favorite", FormMethod.Get))
        {*@
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
        <p>
            Search Name: @Html.TextBox("searchData", ViewBag.CurrentFilter as string)
            <input type="submit" value="Find" />
        </p>
        }
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { Sorting_Order = ViewBag.SortingName,currentFilter = ViewBag.CurrentFilter})
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.description)*@
                Description
            </th>
            <th>
                @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.SortingDate, current = ViewBag.CurrentFilter })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Link.name)*@
                Link
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.UserProfile.usrId)*@
                UserName
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Link.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserProfile.usrlogin)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.favoriteId }) |
                @Html.ActionLink("Details", "Details", new { id=item.favoriteId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.favoriteId })
            </td>
        </tr>
    }

    </table>
    <br />

    @*@if (Model != null
        && Model.PageCount > 0)
    {
        <div>
         Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    }

    @if (Model != null)
    {
        @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }*@


</body>
</html>
